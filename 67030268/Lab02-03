1.1 int บน ESP32 ใช้กี่ไบต์?
ตอบ 4 ไบต์ (32 บิต)

1.2 จากผลลัพธ์ นักศึกษาสังเกตเห็นอะไรเมื่อค่าเกินขอบเขตของ int บน ESP32?
ตอบ เมื่อกำหนดค่าเกินขอบเขตของ int (เกิน 2,147,483,647 หรือ ต่ำกว่า -2,147,483,648) 
จะเกิด Overflow หรือ Underflow ซึ่งทำให้ค่าที่แสดงออกมาผิดเพี้ยนหรือกลับทิศทาง เช่น กลายเป็นค่าติดลบหรือเป็นค่าบวกที่ไม่ถูกต้อง เพราะตัวแปร int ไม่สามารถเก็บค่าเกินขอบเขตได้

float และ double บน ESP32 ใช้กี่ไบต์ตามลำดับ?
ตอบ float = 4 ไบต์ double = 8 ไบต์

นักศึกษาสังเกตเห็นความแตกต่างของความแม่นยำระหว่าง float และ double อย่างไร?สถานการณ์ใดที่คุณควรเลือกใช้ double แทน float?
ตอบ float แสดงทศนิยมได้ประมาณ 6–7 ตำแหน่ง double แสดงทศนิยมได้ประมาณ 15–16 ตำแหน่งควรใช้ double เมื่อ:
ต้องการความแม่นยำสูงมาก เช่น คำนวณทางวิทยาศาสตร์ ฟิสิกส์ วิศวกรรม หรือเมื่อต้องคำนวณค่าเล็กๆ หรือใหญ่ๆ มากๆ ที่ float ไม่แม่นยำพอ

char ใช้กี่ไบต์? ค่าตัวเลข (ASCII value) มีความสัมพันธ์กับอักขระอย่างไร?
ตอบ char ใช้ 1 ไบต์ (8 บิต) ASCII คือการแมปตัวอักษรกับตัวเลข เช่น 'A' = 65, 'a' = 97, 'Z' = 90
ทุกตัวอักษรจะมีค่าเลขประจำตัวในระบบ ASCII ซึ่งสามารถใช้งานผ่านการแปลง char → int ได้

bool ใช้กี่ไบต์? true และ false ถูกแสดงผลเป็นค่าใดบน Serial Monitor?
ตอบ bool ใช้ 1 ไบต์ true แสดงเป็น 1 false แสดงเป็น 0

ชนิดข้อมูลจำนวนเต็มแต่ละชนิด (long, long long, unsigned int, unsigned long, unsigned long long) ใช้กี่ไบต์บน ESP32?
ตอบ 
  ชนิดข้อมูล               ขนาด (ไบต์)     
 long               | 4 ไบต์ (32-bit) 
 long long          | 8 ไบต์ (64-bit) 
 unsigned int       | 4 ไบต์ (32-bit) 
 unsigned long long | 8 ไบต์ (64-bit) 

บน ESP32, long มีขอบเขตเท่ากับ int หรือไม่? ชนิดข้อมูลใดที่คุณจะใช้หากต้องการเก็บค่าจำนวนเต็มบวกที่ใหญ่ที่สุด?
ตอบ long บน ESP32 มีขอบเขต เท่ากับ int (คือ 32-bit)
ถ้าต้องการเก็บค่าจำนวนเต็มบวกขนาดใหญ่ที่สุด ควรใช้ unsigned long long (64-bit ไม่มีเครื่องหมายลบ) ซึ่งสามารถเก็บค่าได้สูงถึง ~18,446,744,073,709,551,615

byte ใช้กี่ไบต์? เมื่อ myByte ถูกกำหนดให้เป็น 256 ผลลัพธ์ที่ได้คืออะไร และเพราะเหตุใด?
ตอบ byte ใช้ 1 ไบต์ (สามารถเก็บค่า 0–255) เมื่อกำหนด myByte = 256; ผลลัพธ์คือ 0 เพราะเกิด Overflow → 256 % 256 = 0
ค่าที่เกิน 255 จะวนกลับไปเริ่มต้นใหม่จาก 0 ตามระบบแบบ 8 บิต

ทำไม 10 / 3.0 (เมื่อตัวหารเป็น float หรือ double) ถึงได้ผลลัพธ์เป็นทศนิยม แต่เมื่อตัวหารถูกแปลงเป็น int แล้วผลลัพธ์เป็นจำนวนเต็ม?
ตอบ 10 / 3.0 → int / float → ระบบจะโปรโมต int ให้เป็น float ก่อนคำนวณ จึงได้ผลลัพธ์เป็น 3.33...
แต่ 10 / (int)3.0 → เป็น int / int → ค่าทศนิยมจะถูกตัดทิ้ง (ผลลัพธ์เป็น 3)
นี่คือลักษณะของการทำงานแบบ Integer Division

นักศึกษาจะใช้การทำ Type Casting ในสถานการณ์ใดบ้างในการเขียนโปรแกรม?
ตอบ 1.เพื่อป้องกันการตัดทศนิยม
เช่น (float)count / total แทน count / total
2.เพื่อเปลี่ยนชนิดข้อมูลก่อนใช้งาน
เช่น แปลง float เป็น int เพื่อแสดงผลแบบไม่มีทศนิยม
3.เมื่อคำนวณระหว่างชนิดข้อมูลต่างกัน
เช่น int + float → ต้องแปลงให้เข้ากันเพื่อป้องกันปัญหา
4.เมื่อใช้กับการแปลงอักขระกับเลข ASCII
เช่น (int)'A' จะได้ 65
5.เพื่อควบคุมหน่วยความจำหรือความเร็ว
เช่น แปลง double เป็น float ถ้าไม่ต้องการความละเอียดสูงมาก














