คำถาม

1.1 int บน ESP32 ใช้กี่ไบต์?
- int บน ESP32 ใช้ 4 ไบต์ (32 บิต)

1.2 จากผลลัพธ์ นักศึกษาสังเกตเห็นอะไรเมื่อค่าเกินขอบเขตของ int บน ESP32?
- เมื่อค่าเกินขอบเขต จะเกิด Overflow หรือ Underflow ค่าจะวนกลับไปอีกฝั่ง

คำถาม

2.1 float และ double บน ESP32 ใช้กี่ไบต์ตามลำดับ?
- float ใช้ 4 ไบต์ (32 บิต) double ใช้ 8 ไบต์ (64 บิต)

2.2 นักศึกษาสังเกตเห็นความแตกต่างของความแม่นยำระหว่าง float และ double อย่างไร? สถานการณ์ใดที่คุณควรเลือกใช้ double แทน float?
- float แสดงทศนิยมได้ประมาณ 6–7 หลัก double แม่นยำกว่า รองรับได้ประมาณ 15–16 หลัก สถานการณ์ที่ควรใช้ double: เมื่อต้องการความแม่นยำสูง และการจัดการค่าทศนิยมที่ยาวมาก

คำถาม

3.1 char ใช้กี่ไบต์? ค่าตัวเลข (ASCII value) มีความสัมพันธ์กับอักขระอย่างไร?
- char ใช้ 1 ไบต์ (8 บิต) ค่า ASCII เป็นค่าตัวเลขที่สอดคล้องกับตัวอักษร การกำหนดค่าจำนวนให้ char จะแสดงอักขระตามตาราง ASCII ที่ตรงกับค่านั้น

คำถาม

4.1 bool ใช้กี่ไบต์? true และ false ถูกแสดงผลเป็นค่าใดบน Serial Monitor?
- bool ใช้ 1 ไบต์ true แสดงเป็น 1 false แสดงเป็น 0 

คำถาม

5.1 ชนิดข้อมูลจำนวนเต็มแต่ละชนิด (long, long long, unsigned int, unsigned long, unsigned long long) ใช้กี่ไบต์บน ESP32?
- long	4 ไบต์	(32 บิต)	
- long long	8 ไบต์	(64 บิต)	
- unsigned int	4 ไบต์	(32 บิต)	
- unsigned long	4 ไบต์	(32 บิต)	
- unsigned long long	8 ไบต์	(64 บิต)

5.2 บน ESP32, long มีขอบเขตเท่ากับ int หรือไม่? ชนิดข้อมูลใดที่คุณจะใช้หากต้องการเก็บค่าจำนวนเต็มบวกที่ใหญ่ที่สุด?
- long มีขอบเขตเท่ากับ int เพราะทั้งคู่ใช้ 4 ไบต์ เก็บจำนวนเต็มบวกที่มีค่ามากที่สุด ควรใช้ unsigned long long

คำถาม

6.1 byte ใช้กี่ไบต์? เมื่อ myByte ถูกกำหนดให้เป็น 256 ผลลัพธ์ที่ได้คืออะไร และเพราะเหตุใด?
- byte ใช้ 1 ไบต์ (8 บิต) เมื่อกำหนด myByte = 256 จะเกิด Overflow → ค่ากลายเป็น 0 เพราะเกิน 255 แล้ววนกลับไปเริ่มต้น

คำถาม

7.1 ทำไม 10 / 3.0 (เมื่อตัวหารเป็น float หรือ double) ถึงได้ผลลัพธ์เป็นทศนิยม แต่เมื่อตัวหารถูกแปลงเป็น int แล้วผลลัพธ์เป็นจำนวนเต็ม?
- เพราะเมื่อหารกับ float หรือ double จะเป็นการหารแบบทศนิยม แต่เมื่อแปลงเป็น int จะเป็นการหารแบบจำนวนเต็ม ทศนิยมจะถูกตัดทิ้ง

คำถาม

8.1 นักศึกษาจะใช้การทำ Type Casting ในสถานการณ์ใดบ้างในการเขียนโปรแกรม?
- เพื่อให้ผลลัพธ์การคำนวณถูกต้อง เช่น int / int จะไม่แสดงทศนิยม → ต้องแปลงเป็น float ก่อนหาร เพื่อให้ได้ค่าทศนิยม
- เพื่อลดขนาดข้อมูลหรือไม่สนใจค่าทศนิยม เช่น ต้องการตัดทศนิยมออกจาก float → แปลงเป็น int
- เมื่อฟังก์ชันต้องการชนิดข้อมูลเฉพาะ เช่น ฟังก์ชันรับ int แต่เรามี float → ต้องแปลงให้ตรงชนิดก่อนใช้งาน
