1. int บน ESP32
1.1 int บน ESP32 ใช้ 4 ไบต์ (32 บิต)
1.2 เมื่อค่าเกินขอบเขตของ int จะเกิด overflow/underflow ทำให้ค่ากลับไปเริ่มที่อีกฝั่งของช่วง เช่น 2147483647 + 1 → -2147483648

2. float และ double บน ESP32
float ใช้ 4 ไบต์

double ใช้ 8 ไบต์

ความแม่นยำ: double แสดงทศนิยมได้มากกว่าชัดเจน

ควรใช้ double เมื่อ ต้องการความแม่นยำสูง เช่น คำนวณทางวิทยาศาสตร์ หรือ GPS

3. char
ใช้ 1 ไบต์

ค่าตัวเลข ASCII มีความสัมพันธ์โดยตรงกับตัวอักษร เช่น 'A' = 65

'Z' = 90, 122 = 'z'

4. bool
ใช้ 1 ไบต์

true แสดงผลเป็น 1, false แสดงผลเป็น 0

5. long, long long, unsigned (บน ESP32)
long = 4 ไบต์

long long = 8 ไบต์

unsigned int = 4 ไบต์

unsigned long = 4 ไบต์

unsigned long long = 8 ไบต์

long มีขอบเขตเท่ากับ int บน ESP32

หากต้องการเก็บค่าบวกที่ใหญ่ที่สุด → ใช้ unsigned long long

6. byte
ใช้ 1 ไบต์

เมื่อกำหนด myByte = 256 → ผลลัพธ์เป็น 0 (เพราะ overflow → วนกลับ)

7. ทำไม 10 / 3.0 (float/double) ได้ทศนิยม แต่เมื่อ cast เป็น int แล้วได้จำนวนเต็ม?
เพราะ int / float หรือ int / double จะ แปลงอัตโนมัติ (Type Promotion) ไปเป็น float/double → ให้ผลลัพธ์ทศนิยม

แต่ int / int จะ ตัดทศนิยมทิ้ง เหลือแค่จำนวนเต็ม

8. ใช้ Type Casting ในสถานการณ์ใดบ้าง?
เพื่อให้ผลลัพธ์เป็นทศนิยม เช่น (float)count / total

แปลงค่า float → int เพื่อตัดทศนิยม

แปลง char → int เพื่อดูค่า ASCII

แปลงระหว่างชนิดข้อมูลที่ไม่ตรงกัน เช่น signed ↔ unsigned

ควบคุมการแปลงอย่างชัดเจน เช่น low-level programming
